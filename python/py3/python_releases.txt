关于python安装和配置的问题

1.	python

	a.	python3依赖：zlib-devel，bzip2-devel，readline-devel，openssl-devel，sqlite(3)-devel

		1.	以上的依赖也有各自的依赖，没有一一列出

		2.	这个是根据比较的干净的centos7缺少的依赖得出的结论

	b.	python implementation名称中可能会flag体现该实现的python特性

		1.	-d：with pydebug

		2.	-m：with pymalloc

			a.	pymalloc是specialized object allocator

			b.	比系统自带的allocator快，且对python项目典型内存分配模式有更少的开销 

			c.	使用c的malloc函数获得更大的内存池

			d.	original
				Pymalloc, a specialized object allocator written by Vladimir Marangozov, 
				was a feature added to Python 2.1. Pymalloc is intended to be faster 
				than the system malloc() and to have less memory overhead for allocation 
				patterns typical of Python programs. The allocator uses C's malloc() 
				function to get large pools of memory and then fulfills smaller memory 
				requests from these pools.J

		3.	-u：with wide unicode

		4.	注意：有时也有可能只是hard link

	c.	python安装源码包依赖

		1.	规律：根据包用途、名称可以确认对应的应用，缺少的估计就是相应的-devel(-dev)

2.	python、包配置

	1.	pip：pip配置文件位于~/.config/pip/pip.conf，可以配置的项包括：

		a.	index-url：pip下载python包地址

		b.	format：pip list输出格式（legacy，columns）

	2.	conda：conda的配置文件位于~/.condarc

	3.	matplotlib

		a.	matplotlib配置文件matplotlibrc

			1.	查找路径：`pwd > $MATPLOTLIBRC > ~/.config/matplotlib/(~/.matplotlib) > /path/to/matlabplot/mpl-data

			2.	实际路径
				python -c 'import matplotlib as mpl; print(mpl.matplotlib_fname())'

		b.	matplotlib中文问题

			1.	字符编码问题：python2中默认字符编码方案是ascii，需要更改为utf-8

			2.	字体文件缺失

				a.	问题背景

					1.	mpl不兼容ttc文件，只能识别ttf文件（ttc和ttf文件可查阅其他笔记）

					2.	mpl默认使用/path/to/matplotlib/mpl-data/fonts中的字体文件

				b.	解决方案

					1.	通过mpl字体管理器管理**单个**图表元素字体
						ch=mpl.font_manager.FontProperties(fname=/path/to/font.ttf)

						a.	对每个需要使用该字体的图表元素，都需要传递相应的参数
							如:	ax.set_title(name, fontproperties=ch)

						b.	这个优势在于连字体都不需要安装

					2.	指定"已安装"字体给**当前**mpl配置中默认字体
						mpl.rcParams['font.default-font-familyf'].insert(0, font-name)

						a.	这里的font-name不是ttf文件名，而是字体安装之后的字体名称

							1.	系统已安装字体可以使用fc-list命令查看

							2.	mpl.font_manager.FontManager能找到的字体

								a.	系统中已安装ttf中文字体，即

									1.	/usr/share/fonts/中有ttf文件

									2.	?~/.local/share/fonts/中有ttf文件

								b.	或/path/to/matplotlib/mpl-data/fonts/中有该字体

								c.	可以使用以下命令得到mpl能够找到、使用的字体名称
									sorted[i.name for i in mpl.font_manager.FontManger.ttflist]

							3.	但不是所有系统已安装字体，mpl均可找到

								a.	字体文件问题，如前所述不兼容ttc字体文件

								b.	缓存问题，mpl可能在~/.cache/matplotlib/下有cache文件

									1.	mpl会从里面的一个json文件读取可用字体，需删

									2.	可以使用以下命令得到cache文件夹
										mpl.get_cachedir()

						b.	查看当前默认font-family
							mpl.font_manager.FontProperties().get_family()
							一般默认字体族是"sans-serif"，所以应该将字体名称插入其首位
							mpl.rcParam['font.sans-serif'].insert(0, font-name)

					3.	修改配置文件更改**全局**默认字体

						1.	将字体名称添加在默认字体族首位，作为最优先候选字体
							font.sans-serif : font-name,

						2.	同样要求mpl能够找到、使用相应的字体文件

#todo:axes.unicode_minus:False，#作用就是解决负号'-'显示为方块的问题

